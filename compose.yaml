# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:

  # Backend API server.
  server:
    container_name: server
    build:
      context: .
      target: final
    command: ["serve"]
    environment:
      DATABASE_HOST: database
      HTTP_PORT: 8080
    ports:
      - "8080:8080"
    networks:
      - gopher
    depends_on:
      database:
        condition: service_healthy

  # Database migration command.
  migration:
    container_name: migration
    build:
      context: .
      target: final
    command: ["migrate", "up"]
    environment:
      DATABASE_HOST: database
    networks:
      - gopher
    depends_on:
      database:
        condition: service_healthy

  # Postgres database.
  database:
    container_name: database
    image: postgres:latest
    restart: always
    # secrets:
    # - db-password
    environment:
      POSTGRES_DB: gopher
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      # POSTGRES_PASSWORD_FILE: /run/secrets/db-password
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - gopher
    healthcheck:
        test: ["CMD", "pg_isready", "-U", "postgres"]
        interval: 10s
        timeout: 5s
        retries: 5

volumes:
  db_data:

# secrets:
#   db-password:
#     file: db/password.txt

networks:
  gopher:
    driver: bridge